#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DejaVu.SelfHealthCheck.WebMonitor
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ServiceMonitor")]
	public partial class ServiceMonitorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertComponent(Component instance);
    partial void UpdateComponent(Component instance);
    partial void DeleteComponent(Component instance);
    #endregion
		
		public ServiceMonitorDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ServiceMonitorConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceMonitorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceMonitorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceMonitorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceMonitorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Component> Components
		{
			get
			{
				return this.GetTable<Component>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Component")]
	public partial class Component : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _AppID;
		
		private string _AppName;
		
		private bool _HasSubComponents;
		
		private string _ParentComponentId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAppIDChanging(string value);
    partial void OnAppIDChanged();
    partial void OnAppNameChanging(string value);
    partial void OnAppNameChanged();
    partial void OnHasSubComponentsChanging(bool value);
    partial void OnHasSubComponentsChanged();
    partial void OnParentComponentIdChanging(string value);
    partial void OnParentComponentIdChanged();
    #endregion
		
		public Component()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="NVarChar(255)")]
		public string AppID
		{
			get
			{
				return this._AppID;
			}
			set
			{
				if ((this._AppID != value))
				{
					this.OnAppIDChanging(value);
					this.SendPropertyChanging();
					this._AppID = value;
					this.SendPropertyChanged("AppID");
					this.OnAppIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppName", DbType="NVarChar(255)")]
		public string AppName
		{
			get
			{
				return this._AppName;
			}
			set
			{
				if ((this._AppName != value))
				{
					this.OnAppNameChanging(value);
					this.SendPropertyChanging();
					this._AppName = value;
					this.SendPropertyChanged("AppName");
					this.OnAppNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSubComponents", DbType="Bit NOT NULL")]
		public bool HasSubComponents
		{
			get
			{
				return this._HasSubComponents;
			}
			set
			{
				if ((this._HasSubComponents != value))
				{
					this.OnHasSubComponentsChanging(value);
					this.SendPropertyChanging();
					this._HasSubComponents = value;
					this.SendPropertyChanged("HasSubComponents");
					this.OnHasSubComponentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentComponentId", DbType="NVarChar(255)")]
		public string ParentComponentId
		{
			get
			{
				return this._ParentComponentId;
			}
			set
			{
				if ((this._ParentComponentId != value))
				{
					this.OnParentComponentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentComponentId = value;
					this.SendPropertyChanged("ParentComponentId");
					this.OnParentComponentIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
